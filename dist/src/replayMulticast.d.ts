/**
 * `replayMulticast(g)` generates independent copies of g.
 *
 * `g` is required to not have a type of `next`
 *
 * The return value of each copy is the same as that of the original generator `g` (and replays all items generated by `g`).
 *
 * `replayMulticast(g)` never returns.
 *
 * **Example** If `[c1, c2] = [...take(2)(replayMulticast(2)(range()))]`, then we can consume all elements of c1 (thus consuming g) without consuming the elements of c2.
 *
 * @param {number} [g] the generator to replayMulticast
 */
export { multicast as replayMulticast } from './multicast';
